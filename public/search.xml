<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[「随想」Welcome, 2019]]></title>
    <url>%2F2019%2F03%2F30%2F%E3%80%8C%E9%9A%8F%E6%83%B3%E3%80%8DWelcome-2019%2F</url>
    <content type="text"><![CDATA[2019转眼三个月就过去了，有点时光飞逝而过的感觉，在工作学习生活上有一些感想，记录一下。]]></content>
      <categories>
        <category>个人</category>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>随想</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[「网站收集」我的收藏]]></title>
    <url>%2F2019%2F01%2F01%2F%E3%80%8C%E7%BD%91%E7%AB%99%E6%94%B6%E9%9B%86%E3%80%8D%E6%88%91%E7%9A%84%E6%94%B6%E8%97%8F%2F</url>
    <content type="text"><![CDATA[我的收藏个人博客搭建网页－Hexo-官方参考文档 网页－Hexo-主题优化 Hexo的Next主题详细配置 网页－Hexo-主题iissnan 知乎－Hexo－搭建blog Markdown相关github flavored markdown Markdown编辑－Moeditor @octocat :+1: This PR looks great - it’s ready to merge! :shipit:]]></content>
      <categories>
        <category>个人</category>
        <category>常用站点</category>
      </categories>
      <tags>
        <tag>常用网站</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[「Leetcode-0191」hammingWeight 汉明码]]></title>
    <url>%2F2018%2F12%2F25%2F%E3%80%8CLeetcode-0191%E3%80%8DhammingWeight-%E6%B1%89%E6%98%8E%E7%A0%81%2F</url>
    <content type="text"><![CDATA[题目编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为汉明重量）。 示例 1：输入：00000000000000000000000000001011输出：3解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 ‘1’。 示例 2：输入：00000000000000000000000010000000输出：1解释：输入的二进制串 00000000000000000000000010000000 中，共有一位为 ‘1’． 示例 3：输入：11111111111111111111111111111101输出：31解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 ‘1’。 提示：请注意，在某些语言（如 Java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。在 Java 中，编译器使用二进制补码记法来表示有符号整数。因此，在上面的 示例 3 中，输入表示有符号整数 -3。 链接Leetcode-0191 题解123456789101112131415161718192021222324252627#include &lt;cstdio&gt;typedef unsigned int uint32_t;class Solution&#123;public: int hammingWeight(uint32_t n) &#123; int count = 0; while (n) &#123; n = n &amp; (n - 1); count++; &#125; return count; &#125;&#125;;int main()&#123; Solution a; uint32_t n; scanf("%d", &amp;n); printf("%d", a.hammingWeight(n)); return 0;&#125;]]></content>
      <categories>
        <category>编程</category>
        <category>C++</category>
        <category>位运算</category>
      </categories>
      <tags>
        <tag>Leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[benny]]></title>
    <url>%2F2018%2F12%2F23%2Fbenny%2F</url>
    <content type="text"><![CDATA[MathJax.Hub.Config({ tex2jax: { skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'], inlineMath: [['$','$']] } }); Markdown 基本语法1.1 标题Markdown中包含了6级的标题，每级标题的字号是不一样的，由1-6递减，分别为#，##，…,######. 一二级标题自带分格线 1.1.1 二级标题1.2 段落与分隔线1.2.1 段落在Markdown中写作一个段落的方法很简单，我们使用一个空行来表示就好了 1.2.2 分隔线 1.3 粗体及斜体**文字** 显示为粗体 *文字* 显示为斜体 今天是个不一样的_日子_ 1.4 引用代码程序员在blog中添加代码是最经常不过的了，可以通过如下的方式添加一段代码，也可以指定代码的种类。使用首尾各三个```。在开头的三个```后可以添加语言名称 1.5 添加图片和链接 添加链接，使用两个中括号来表示，前一个中括号为链接说明，后一个中括号为链接地址。格式如下：[]() 计蒜客 30999 添加图片，在添加链接的的前一个中括号前添加一个!(当然是半角的)号。格式：！[]() c d 1.6 有序列表和无序列表有序列表 数字.空格无序列表 * 空格 工作 学习 生活 工作 学习 生活 1.7 任务列表购物清单 一次性水杯 西瓜 豆浆 可口可乐 小茗同学 Markdown 高级语法2.1 表格 Header1 Header2 Header3 item 1 1. one2. two3. three 50 item 2 4. four5. five6. six 60 2.2 流程图Github上的语法说明：Markdown流程图说明 1st=&gt;start: Start &emsp;&emsp;春天来了，又到了万物复苏的季节。 12345#include &lt;cstdio&gt;int main()&#123; return 0;&#125; 这是一个示例图片。 图片显示在 N 段文字的右边。 N 与图片高度有关。 刷屏行。 刷屏行。 到这里应该不会受影响了，本行应该延伸到了图片的正下方，所以我要足够长才能确保不同的屏幕下都看到效果。 Header1 Header2 item 1 1. one2. two3. three $9 = 3 \times 3$ bbb $ E = mc ^ 2$ $$ A=a \bullet i+b \bullet j=[i,j] \bullet [a;b]=基\bullet坐标 \tag{3}$$$$E=mc^2$$ $$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F23%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
